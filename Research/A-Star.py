import copy

def heuristic(graph, start_node, target_node):

def a_star(graph, start_node, target_node):
    visited = {}
    unvisited = {}

    for key in graph.keys():
        unvisited[key] = [float('inf'), float('inf'), None]

        h_score = heuristic(start_node)
        unvisited[start_node] = [0, h_score, None]

gr2 = {1: ("", {2:9} ),
       2: ("", {1:9, 3:11}),
       3: ("", {2:11, 8:8.5}),
       4: ("", {5:6, 6:5}),
       5: ("", {4:6}),
       6: ("", {4:5, 7:6, 11:4}),
       7: ("", {6:6, 14:10}),
       8: ("", {3:8.5, 9:6, 10:2}),
       9: ("", {8:6}),
       10: ("", {8:2, 11:13, 12:6}),
       11: ("", {6:4, 10:13, 13:6}),
       12: ("", {10:6, 15:17}),
       13: ("", {11:6, 14:6, 16:16.5}),
       14: ("", {7:10, 13:6}),
       15: ("", {12:17, 20:13.5, 23:19.5}),
       16: ("", {13:16.5, 17:2, 18:3.5, 19:4}),
       17: ("", {16:2, 18:4, 19:3.5}),
       18: ("", {16:3.5, 17:4, 19:2, 20:2.5}),
       19: ("", {16:4, 17:3.5, 18:2}),
       20: ("", {15:13.5, 18:2.5, 21:8}),
       21: ("", {20:8, 22:6, 24:6}),
       22: ("", {21:6, 28:10}),
       23: ("", {15:19.5, 24:13, 26:2}),
       24: ("", {21:6, 23:13, 27:4}),
       25: ("", {26:6}),
       26: ("", {23:2, 25:6, 30:8}),
       27: ("", {24:4, 28:6, 31:6}),
       28: ("", {22:10, 27:6}),
       29: ("", {30:6}),
       30: ("", {26:8, 29:6, 31:13}),
       31: ("", {27:6, 30:13, 32:4.5, 33:2.5}),
       32: ("", {31:4.5, 33:3.5}),
       33: ("", {31:2.5, 32:3.5})
      }

print(a_star(gr2, 17, 25))
